// Copyright (c) 2008 - 2023 kio@little-bat.de
// BSD-2-Clause license
// https://opensource.org/licenses/BSD-2-Clause

#include "UlaMono.h"
#include "Machine.h"
#include "MachineController.h"
#include "Screen/ScreenMono.h"



UlaMono::UlaMono (Machine* m, isa_id id, cstr oaddr, cstr iaddr)
:
	Ula(m,id,oaddr,iaddr)
{
	frame_w	  = 56;			// frame width [bytes] == address offset per scan line
	screen_w  = 32;			// screen width [bytes]
	screen_x0 = 12;			// hor. screen offset inside frame scan lines [bytes]

	//lines_in_screen		= 192;					// screen height [scan lines]
	//lines_per_frame		= 312*50/framerate;		// frame height [scan line]
	//lines_before_screen	=
	//lines_after_screen	= (lines_per_frame - lines_in_screen) / 2;

	//waitmap_size			= 0;
	//lines_before_screen	= 64;
	//lines_in_screen		= 192;
	//lines_after_screen	= 56;
	//cc_per_byte			= 4;
	cc_per_line				= 4*52;		// cc_per_byte * bytes_per_line;

	frame_data  = newPixelArray();
	frame_data2 = newPixelArray();
}


UlaMono::~UlaMono ( )
{
	delete[] frame_data;
	delete[] frame_data2;
}

void UlaMono::powerOn(int32 cc)
{
	Ula::powerOn(cc);
	screen = ScreenMonoPtr(machine->controller->getScreen());
}


void UlaMono::saveToFile( FD& fd ) const throws
{
	Ula::saveToFile(fd);
	TODO();
}

void UlaMono::loadFromFile( FD& fd ) throws
{
	Ula::loadFromFile(fd);
	TODO();
}

// special callbacks for ZX80/ZX81 screen update:
void UlaMono::crtcRead ( int32, uint )
{
	IERR();		// must not be called for other ULAs
}

void UlaMono::markVideoRam()
{
	/*	there is no need to synchronize cpu and crtc,
		because the video signal is generated by the cpu itself.
		therefore cpu access to video ram needs no cpu_crtc flag
	*/
	return;
}






